{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/alexarmero/Desktop/TERM 2 /Team-Rocket-Large-Group-Project/src/components/Index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Line, Svg } from \"react-native-svg\";\nimport PropType from \"prop-types\";\nimport ProgressBar from \"./ProgressBar\";\n\nvar Index = function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      barMarkers = [];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var windowWidth = Dimensions.get(\"window\");\n      var widthUnit = windowWidth.width / 72;\n      console.log(widthUnit);\n\n      for (var i = 0; i <= 100; i + 50) {\n        var newMarker = React.createElement(Line, {\n          x1: i,\n          y1: \"0\",\n          x2: i,\n          y2: \"100\",\n          stroke: \"red\",\n          strokeWidth: \"1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }\n        });\n        this.props.barMarkers = this.props.barMarkers.concat(newMarker);\n      }\n\n      console.log(this.props.barMarkers);\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, React.createElement(ProgressBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        flex: 1,\n        flexDirection: \"coloumn\",\n        justifyContents: \"space-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, React.createElement(Svg, {\n        height: \"100\",\n        width: \"100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, this.props.barMarkers)));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nIndex.propTypes = {\n  barMarkers: PropType.array.isRequired\n};\nexport { Index as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"blue\"\n  }\n});","map":{"version":3,"sources":["/Users/alexarmero/Desktop/TERM 2 /Team-Rocket-Large-Group-Project/src/components/Index.js"],"names":["React","Component","Line","Svg","PropType","ProgressBar","Index","barMarkers","windowWidth","Dimensions","get","widthUnit","width","console","log","i","newMarker","props","concat","styles","container","propTypes","array","isRequired","StyleSheet","create","backgroundColor"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAASC,IAAT,EAAeC,GAAf,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,WAAP;;IAEqBC,K;;;;;;;;;;;;;WAInB,6BAAoB;AAClBC,MAAAA,UAAU,GAAG,EAAb;AACD;;;WAED,kBAAS;AACP,UAAMC,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAApB;AACA,UAAMC,SAAS,GAAGH,WAAW,CAACI,KAAZ,GAAoB,EAAtC;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AAEA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,GAArB,EAA0BA,CAAC,GAAG,EAA9B,EAAkC;AAChC,YAAMC,SAAS,GACb,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAED,CAAV;AAAa,UAAA,EAAE,EAAC,GAAhB;AAAoB,UAAA,EAAE,EAAEA,CAAxB;AAA2B,UAAA,EAAE,EAAC,KAA9B;AAAoC,UAAA,MAAM,EAAC,KAA3C;AAAiD,UAAA,WAAW,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAIA,aAAKE,KAAL,CAAWV,UAAX,GAAwB,KAAKU,KAAL,CAAWV,UAAX,CAAsBW,MAAtB,CAA6BF,SAA7B,CAAxB;AACD;;AAEDH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWV,UAAvB;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEY,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,CAAZ;AAAe,QAAA,aAAa,EAAC,SAA7B;AAAuC,QAAA,eAAe,EAAC,eAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAC,KAAZ;AAAkB,QAAA,KAAK,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKH,KAAL,CAAWV,UADd,CADF,CAHF,CADF;AAWD;;;;EAnCgCN,S;;AAAdK,K,CACZe,S,GAAY;AACjBd,EAAAA,UAAU,EAAEH,QAAQ,CAACkB,KAAT,CAAeC;AADV,C;SADAjB,K;AAsCrB,IAAMa,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,eAAe,EAAE;AADR;AADoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { View, StyleSheet, Text, Dimensions } from \"react-native\";\nimport { Line, Svg } from \"react-native-svg\";\nimport PropType from \"prop-types\";\n\nimport ProgressBar from \"./ProgressBar\";\n\nexport default class Index extends Component {\n  static propTypes = {\n    barMarkers: PropType.array.isRequired,\n  };\n  componentDidMount() {\n    barMarkers = [];\n  }\n\n  render() {\n    const windowWidth = Dimensions.get(\"window\");\n    const widthUnit = windowWidth.width / 72;\n\n    console.log(widthUnit);\n\n    for (let i = 0; i <= 100; i + 50) {\n      const newMarker = (\n        <Line x1={i} y1=\"0\" x2={i} y2=\"100\" stroke=\"red\" strokeWidth=\"1\" />\n      );\n\n      this.props.barMarkers = this.props.barMarkers.concat(newMarker);\n    }\n\n    console.log(this.props.barMarkers);\n\n    return (\n      <View style={styles.container}>\n        <ProgressBar></ProgressBar>\n\n        <View flex={1} flexDirection=\"coloumn\" justifyContents=\"space-between\">\n          <Svg height=\"100\" width=\"100\">\n            {this.props.barMarkers}\n          </Svg>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"blue\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}