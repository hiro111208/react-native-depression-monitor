{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/alexarmero/Desktop/TERM 2 /Team-Rocket-Large-Group-Project/src/components/BarMarkers.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState, useEffect, useRef, Animated } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropType from \"prop-types\";\nimport Svg from \"react-native-svg\";\n\nvar BarMarkers = function (_Component) {\n  _inherits(BarMarkers, _Component);\n\n  var _super = _createSuper(BarMarkers);\n\n  function BarMarkers() {\n    var _this;\n\n    _classCallCheck(this, BarMarkers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      barMarkers: []\n    };\n    return _this;\n  }\n\n  _createClass(BarMarkers, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.bar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.bar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.bar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.bar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return BarMarkers;\n}(Component);\n\nexport { BarMarkers as default };\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100\",\n    height: \"100\",\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"red\"\n  },\n  bar: {\n    flex: 1,\n    width: \"100\",\n    height: \"100\",\n    backgroundColor: \"red\"\n  }\n});","map":{"version":3,"sources":["/Users/alexarmero/Desktop/TERM 2 /Team-Rocket-Large-Group-Project/src/components/BarMarkers.js"],"names":["React","Component","useState","useEffect","useRef","Animated","PropType","Svg","BarMarkers","state","barMarkers","styles","container","bar","StyleSheet","create","width","height","flex","flexDirection","backgroundColor"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,MAAhD,EAAwDC,QAAxD,QAAwE,OAAxE;;;;;;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;IAEqBC,U;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE;AADN,K;;;;;;WAgBR,kBAAS;AAKP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACE,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACE,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACE,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;;;EA/BqCZ,S;;SAAnBO,U;AAkCrB,IAAMG,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,KAAK,EAAE,KADE;AAETC,IAAAA,MAAM,EAAE,KAFC;AAGTC,IAAAA,IAAI,EAAE,CAHG;AAITC,IAAAA,aAAa,EAAE,QAJN;AAKTC,IAAAA,eAAe,EAAE;AALR,GADoB;AAQ/BP,EAAAA,GAAG,EAAE;AACHK,IAAAA,IAAI,EAAE,CADH;AAEHF,IAAAA,KAAK,EAAE,KAFJ;AAGHC,IAAAA,MAAM,EAAE,KAHL;AAIHG,IAAAA,eAAe,EAAE;AAJd;AAR0B,CAAlB,CAAf","sourcesContent":["import React, { Component, useState, useEffect, useRef, Animated } from \"react\";\nimport { Text, StyleSheet, Dimensions, Button, View } from \"react-native\";\nimport PropType from \"prop-types\";\nimport Svg from \"react-native-svg\";\n\nexport default class BarMarkers extends Component {\n  state = {\n    barMarkers: [],\n  };\n\n  //   setBarMarkers = (x, y) => {\n  //     for (let i = 0; i <= x; i + y) {\n  //       const newMarker = (\n  //         <Line x1={i} y1=\"0\" x2={i} y2=\"100\" stroke=\"red\" strokeWidth=\"1\" />\n  //       );\n\n  //       this.props.barMarkers = this.props.barMarkers.concat(newMarker);\n  //     }\n\n  //     console.log(this.props.barMarkers);\n  //   };\n\n  render() {\n    // const windowWidth = Dimensions.get(\"window\");\n    // const widthUnit = windowWidth.width / 72;\n    // this.setBarMarkers(windowWidth, widthUnit);\n\n    return (\n      <View style={styles.container}>\n        {/* <Svg>{this.props.barMarkers}</Svg> */}\n        <View style={styles.bar}></View>\n        <View style={styles.bar}></View>\n        <View style={styles.bar}></View>\n        <View style={styles.bar}></View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100\",\n    height: \"100\",\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"red\",\n  },\n  bar: {\n    flex: 1,\n    width: \"100\",\n    height: \"100\",\n    backgroundColor: \"red\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}