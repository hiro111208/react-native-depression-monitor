{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/alexarmero/Desktop/TERM 2 /Team-Rocket-Large-Group-Project/src/components/BarMarkers.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState, useEffect, useRef, Animated } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropType from \"prop-types\";\nimport Svg from \"react-native-svg\";\n\nvar BarMarkers = function (_Component) {\n  _inherits(BarMarkers, _Component);\n\n  var _super = _createSuper(BarMarkers);\n\n  function BarMarkers() {\n    var _this;\n\n    _classCallCheck(this, BarMarkers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      barMarkers: []\n    };\n    return _this;\n  }\n\n  _createClass(BarMarkers, [{\n    key: \"render\",\n    value: function render() {\n      var windowWidth = Dimensions.get(\"window\");\n      var widthUnit = windowWidth.width / 72;\n      var barMarkers = [];\n\n      for (var i = 0; i <= windowWidth; i + widthUnit) {\n        barMarkers = [].concat(_toConsumableArray(barMarkers), [React.createElement(View, {\n          style: styles.bar,\n          margin: widthUnit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }\n        })]);\n      }\n\n      console.log(barMarkers);\n      return React.createElement(View, {\n        style: styles.barContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 12\n        }\n      }, barMarkers);\n    }\n  }]);\n\n  return BarMarkers;\n}(Component);\n\nexport { BarMarkers as default };\nvar styles = StyleSheet.create({\n  barContainer: {\n    marginTop: 140,\n    width: \"100%\",\n    height: 40,\n    flexDirection: \"row\",\n    backgroundColor: \"#DDDD\"\n  },\n  bar: {\n    width: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"black\"\n  }\n});","map":{"version":3,"sources":["/Users/alexarmero/Desktop/TERM 2 /Team-Rocket-Large-Group-Project/src/components/BarMarkers.js"],"names":["React","Component","useState","useEffect","useRef","Animated","PropType","Svg","BarMarkers","state","barMarkers","windowWidth","Dimensions","get","widthUnit","width","i","styles","bar","console","log","barContainer","StyleSheet","create","marginTop","height","flexDirection","backgroundColor"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,MAAhD,EAAwDC,QAAxD,QAAwE,OAAxE;;;;;;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;IAEqBC,U;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE;AADN,K;;;;;;WAsBR,kBAAS;AACP,UAAMC,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAApB;AACA,UAAMC,SAAS,GAAGH,WAAW,CAACI,KAAZ,GAAoB,EAAtC;AACA,UAAIL,UAAU,GAAG,EAAjB;;AACA,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,WAArB,EAAkCK,CAAC,GAAGF,SAAtC,EAAiD;AAC/CJ,QAAAA,UAAU,gCACLA,UADK,IAER,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEO,MAAM,CAACC,GAApB;AAAyB,UAAA,MAAM,EAAEJ,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFQ,EAAV;AAID;;AACDK,MAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AAEA,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACI,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCX,UAAnC,CAAP;AACD;;;;EApCqCT,S;;SAAnBO,U;AAuCrB,IAAMS,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,YAAY,EAAE;AACZG,IAAAA,SAAS,EAAE,GADC;AAEZT,IAAAA,KAAK,EAAE,MAFK;AAGZU,IAAAA,MAAM,EAAE,EAHI;AAIZC,IAAAA,aAAa,EAAE,KAJH;AAKZC,IAAAA,eAAe,EAAE;AALL,GADiB;AAQ/BT,EAAAA,GAAG,EAAE;AACHH,IAAAA,KAAK,EAAE,CADJ;AAEHW,IAAAA,aAAa,EAAE,QAFZ;AAGHC,IAAAA,eAAe,EAAE;AAHd;AAR0B,CAAlB,CAAf","sourcesContent":["import React, { Component, useState, useEffect, useRef, Animated } from \"react\";\nimport { Text, StyleSheet, Dimensions, Button, View } from \"react-native\";\nimport PropType from \"prop-types\";\nimport Svg from \"react-native-svg\";\n\nexport default class BarMarkers extends Component {\n  state = {\n    barMarkers: [],\n  };\n\n  //   setBarMarkers = (x, y) => {\n  //     for (let i = 0; i <= x; i + y) {\n  //       const newMarker = (\n  //         <Line x1={i} y1=\"0\" x2={i} y2=\"100\" stroke=\"red\" strokeWidth=\"1\" />\n  //       );\n\n  //       this.props.barMarkers = this.props.barMarkers.concat(newMarker);\n  //     }\n\n  //     console.log(this.props.barMarkers);\n  //   };\n  //   const windowWidth = Dimensions.get(\"window\");\n  //   const widthUnit = windowWidth.width / 72;\n  // this.setBarMarkers(windowWidth, widthUnit);\n  // {\n  //   /* <Svg>{this.props.barMarkers}</Svg> */\n  // }\n\n  render() {\n    const windowWidth = Dimensions.get(\"window\");\n    const widthUnit = windowWidth.width / 72;\n    let barMarkers = [];\n    for (let i = 0; i <= windowWidth; i + widthUnit) {\n      barMarkers = [\n        ...barMarkers,\n        <View style={styles.bar} margin={widthUnit}></View>,\n      ];\n    }\n    console.log(barMarkers);\n\n    return <View style={styles.barContainer}>{barMarkers}</View>;\n  }\n}\n\nconst styles = StyleSheet.create({\n  barContainer: {\n    marginTop: 140,\n    width: \"100%\",\n    height: 40,\n    flexDirection: \"row\",\n    backgroundColor: \"#DDDD\",\n  },\n  bar: {\n    width: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"black\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}