{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/alexarmero/Desktop/TERM 2 /Team-Rocket-Large-Group-Project/src/components/BarMarkers.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState, useEffect, useRef, Animated } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropType from \"prop-types\";\nimport Svg from \"react-native-svg\";\n\nvar BarMarkers = function (_Component) {\n  _inherits(BarMarkers, _Component);\n\n  var _super = _createSuper(BarMarkers);\n\n  function BarMarkers() {\n    var _this;\n\n    _classCallCheck(this, BarMarkers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      markers: []\n    };\n\n    _this.setBarMarkers = function () {\n      var count = 0;\n\n      for (var i = 0; i < _this.getWidth; i + _this.setNumberOfBars) {\n        _this.setState({\n          markers: [].concat(_toConsumableArray(_this.state.markers), [React.createElement(View, {\n            style: styles.bar,\n            left: widthUnit * count,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 11\n            }\n          })])\n        });\n\n        count++;\n      }\n\n      console.log(_this.state.markers);\n    };\n\n    _this.getWidth = function () {\n      var windowWidth = Dimensions.get(\"window\");\n      return windowWidth.width;\n    };\n\n    _this.setNumberOfBars = function (number) {\n      var windowWidth = Dimensions.get(\"window\");\n      return windowWidth.width / number;\n    };\n\n    return _this;\n  }\n\n  _createClass(BarMarkers, [{\n    key: \"render\",\n    value: function render() {\n      this.setBarMarkers;\n      var windowWidth = Dimensions.get(\"window\");\n      var widthUnit = windowWidth.width / 8;\n      return React.createElement(View, {\n        style: styles.barContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, this.state.markers.map(function (x) {\n        return x;\n      }));\n    }\n  }]);\n\n  return BarMarkers;\n}(Component);\n\nexport { BarMarkers as default };\nvar styles = StyleSheet.create({\n  barContainer: {\n    width: \"100%\",\n    height: \"100%\",\n    flexDirection: \"row\",\n    backgroundColor: \"transparent\",\n    width: \"100%\"\n  },\n  bar: {\n    width: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"black\"\n  }\n});","map":{"version":3,"sources":["/Users/alexarmero/Desktop/TERM 2 /Team-Rocket-Large-Group-Project/src/components/BarMarkers.js"],"names":["React","Component","useState","useEffect","useRef","Animated","PropType","Svg","BarMarkers","state","markers","setBarMarkers","count","i","getWidth","setNumberOfBars","setState","styles","bar","widthUnit","console","log","windowWidth","Dimensions","get","width","number","barContainer","map","x","StyleSheet","create","height","flexDirection","backgroundColor"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,MAAhD,EAAwDC,QAAxD,QAAwE,OAAxE;;;;;;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;IAEqBC,U;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AADH,K;;UAIRC,a,GAAgB,YAAM;AACpB,UAAIC,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAKC,QAAzB,EAAmCD,CAAC,GAAG,MAAKE,eAA5C,EAA6D;AAC3D,cAAKC,QAAL,CAAc;AACZN,UAAAA,OAAO,+BACF,MAAKD,KAAL,CAAWC,OADT,IAEL,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAEO,MAAM,CAACC,GAApB;AAAyB,YAAA,IAAI,EAAEC,SAAS,GAAGP,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK;AADK,SAAd;;AAMAA,QAAAA,KAAK;AACN;;AACDQ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKZ,KAAL,CAAWC,OAAvB;AACD,K;;UAEDI,Q,GAAW,YAAM;AACf,UAAMQ,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAApB;AACA,aAAOF,WAAW,CAACG,KAAnB;AACD,K;;UACDV,e,GAAkB,UAACW,MAAD,EAAY;AAC5B,UAAMJ,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAApB;AACA,aAAOF,WAAW,CAACG,KAAZ,GAAoBC,MAA3B;AACD,K;;;;;;;WAED,kBAAS;AACP,WAAKf,aAAL;AACA,UAAMW,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAApB;AACA,UAAML,SAAS,GAAGG,WAAW,CAACG,KAAZ,GAAoB,CAAtC;AAWA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACU,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKlB,KAAL,CAAWC,OAAX,CAAmBkB,GAAnB,CAAuB,UAACC,CAAD;AAAA,eAAOA,CAAP;AAAA,OAAvB,CADH,CADF;AAKD;;;;EA/CqC5B,S;;SAAnBO,U;AAkDrB,IAAMS,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,YAAY,EAAE;AACZF,IAAAA,KAAK,EAAE,MADK;AAEZO,IAAAA,MAAM,EAAE,MAFI;AAIZC,IAAAA,aAAa,EAAE,KAJH;AAKZC,IAAAA,eAAe,EAAE,aALL;AAMZT,IAAAA,KAAK,EAAE;AANK,GADiB;AAS/BP,EAAAA,GAAG,EAAE;AACHO,IAAAA,KAAK,EAAE,CADJ;AAEHQ,IAAAA,aAAa,EAAE,QAFZ;AAGHC,IAAAA,eAAe,EAAE;AAHd;AAT0B,CAAlB,CAAf","sourcesContent":["import React, { Component, useState, useEffect, useRef, Animated } from \"react\";\nimport { Text, StyleSheet, Dimensions, Button, View } from \"react-native\";\nimport PropType from \"prop-types\";\nimport Svg from \"react-native-svg\";\n\nexport default class BarMarkers extends Component {\n  state = {\n    markers: [],\n  };\n\n  setBarMarkers = () => {\n    let count = 0;\n    for (let i = 0; i < this.getWidth; i + this.setNumberOfBars) {\n      this.setState({\n        markers: [\n          ...this.state.markers,\n          <View style={styles.bar} left={widthUnit * count}></View>,\n        ],\n      });\n      count++;\n    }\n    console.log(this.state.markers);\n  };\n\n  getWidth = () => {\n    const windowWidth = Dimensions.get(\"window\");\n    return windowWidth.width;\n  };\n  setNumberOfBars = (number) => {\n    const windowWidth = Dimensions.get(\"window\");\n    return windowWidth.width / number;\n  };\n\n  render() {\n    this.setBarMarkers;\n    const windowWidth = Dimensions.get(\"window\");\n    const widthUnit = windowWidth.width / 8;\n    // this.setBarMarkers;\n    // console.log(this.state.barMarkers);\n    // <View style={styles.bar} left={widthUnit * 1}></View>\n    // <View style={styles.bar} left={widthUnit * 2}></View>\n    // <View style={styles.bar} left={widthUnit * 3}></View>\n    // <View style={styles.bar} left={widthUnit * 4}></View>\n    // <View style={styles.bar} left={widthUnit * 5}></View>\n    // <View style={styles.bar} left={widthUnit * 6}></View>\n    // <View style={styles.bar} left={widthUnit * 7}></View>\n    // <View style={styles.bar} left={widthUnit * 8}></View>\n    return (\n      <View style={styles.barContainer}>\n        {this.state.markers.map((x) => x)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  barContainer: {\n    width: \"100%\",\n    height: \"100%\",\n\n    flexDirection: \"row\",\n    backgroundColor: \"transparent\",\n    width: \"100%\",\n  },\n  bar: {\n    width: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"black\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}