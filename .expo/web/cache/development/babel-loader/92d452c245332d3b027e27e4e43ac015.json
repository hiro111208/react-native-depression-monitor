{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/alexarmero/Desktop/TERM 2 /Team-Rocket-Large-Group-Project/src/components/BarMarkers.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState, useEffect, useRef, Animated } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropType from \"prop-types\";\nimport Svg from \"react-native-svg\";\n\nvar BarMarkers = function (_Component) {\n  _inherits(BarMarkers, _Component);\n\n  var _super = _createSuper(BarMarkers);\n\n  function BarMarkers() {\n    var _this;\n\n    _classCallCheck(this, BarMarkers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      barMarkers: []\n    };\n\n    _this.setBarMarkers = function () {\n      var markers = [];\n\n      for (var i = 0; i < _this.getWidth; i + 20) {\n        markers.push(React.createElement(View, {\n          style: styles.bar,\n          margin: widthUnit,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 20\n          }\n        }));\n      }\n    };\n\n    _this.getWidth = function () {\n      var windowWidth = Dimensions.get(\"window\");\n      return windowWidth.width;\n    };\n\n    return _this;\n  }\n\n  _createClass(BarMarkers, [{\n    key: \"render\",\n    value: function render() {\n      var windowWidth = Dimensions.get(\"window\");\n      var widthUnit = windowWidth.width / 72;\n      this.setBarMarkers;\n      console.log(this.state.barMarkers);\n      return React.createElement(View, {\n        style: styles.barContainer,\n        width: this.getWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, this.state.barMarkers, this.setBarMarkers);\n    }\n  }]);\n\n  return BarMarkers;\n}(Component);\n\nexport { BarMarkers as default };\nvar styles = StyleSheet.create({\n  barContainer: {\n    marginTop: 140,\n    height: 40,\n    flexDirection: \"row\",\n    backgroundColor: \"#DDDD\"\n  },\n  bar: {\n    width: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"black\"\n  }\n});","map":{"version":3,"sources":["/Users/alexarmero/Desktop/TERM 2 /Team-Rocket-Large-Group-Project/src/components/BarMarkers.js"],"names":["React","Component","useState","useEffect","useRef","Animated","PropType","Svg","BarMarkers","state","barMarkers","setBarMarkers","markers","i","getWidth","push","styles","bar","widthUnit","windowWidth","Dimensions","get","width","console","log","barContainer","StyleSheet","create","marginTop","height","flexDirection","backgroundColor"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,MAAhD,EAAwDC,QAAxD,QAAwE,OAAxE;;;;;;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;IAEqBC,U;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE;AADN,K;;UAIRC,a,GAAgB,YAAM;AACpB,UAAIC,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAKC,QAAzB,EAAmCD,CAAC,GAAG,EAAvC,EAA2C;AACzCD,QAAAA,OAAO,CAACG,IAAR,CAAa,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACC,GAApB;AAAyB,UAAA,MAAM,EAAEC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACD;AACF,K;;UAEDJ,Q,GAAW,YAAM;AACf,UAAMK,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAApB;AACA,aAAOF,WAAW,CAACG,KAAnB;AACD,K;;;;;;;WAED,kBAAS;AACP,UAAMH,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAApB;AACA,UAAMH,SAAS,GAAGC,WAAW,CAACG,KAAZ,GAAoB,EAAtC;AACA,WAAKX,aAAL;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,UAAvB;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEM,MAAM,CAACS,YAApB;AAAkC,QAAA,KAAK,EAAE,KAAKX,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKL,KAAL,CAAWC,UADd,EAEG,KAAKC,aAFR,CADF;AAMD;;;;EA7BqCV,S;;SAAnBO,U;AAgCrB,IAAMQ,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,YAAY,EAAE;AACZG,IAAAA,SAAS,EAAE,GADC;AAEZC,IAAAA,MAAM,EAAE,EAFI;AAGZC,IAAAA,aAAa,EAAE,KAHH;AAIZC,IAAAA,eAAe,EAAE;AAJL,GADiB;AAO/Bd,EAAAA,GAAG,EAAE;AACHK,IAAAA,KAAK,EAAE,CADJ;AAEHQ,IAAAA,aAAa,EAAE,QAFZ;AAGHC,IAAAA,eAAe,EAAE;AAHd;AAP0B,CAAlB,CAAf","sourcesContent":["import React, { Component, useState, useEffect, useRef, Animated } from \"react\";\nimport { Text, StyleSheet, Dimensions, Button, View } from \"react-native\";\nimport PropType from \"prop-types\";\nimport Svg from \"react-native-svg\";\n\nexport default class BarMarkers extends Component {\n  state = {\n    barMarkers: [],\n  };\n\n  setBarMarkers = () => {\n    let markers = [];\n    for (let i = 0; i < this.getWidth; i + 20) {\n      markers.push(<View style={styles.bar} margin={widthUnit}></View>);\n    }\n  };\n\n  getWidth = () => {\n    const windowWidth = Dimensions.get(\"window\");\n    return windowWidth.width;\n  };\n\n  render() {\n    const windowWidth = Dimensions.get(\"window\");\n    const widthUnit = windowWidth.width / 72;\n    this.setBarMarkers;\n    console.log(this.state.barMarkers);\n\n    return (\n      <View style={styles.barContainer} width={this.getWidth}>\n        {this.state.barMarkers}\n        {this.setBarMarkers}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  barContainer: {\n    marginTop: 140,\n    height: 40,\n    flexDirection: \"row\",\n    backgroundColor: \"#DDDD\",\n  },\n  bar: {\n    width: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"black\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}