// screens/TherapyQuestionScreen.js

import React, { Component } from 'react';
import { StyleSheet, ScrollView, ActivityIndicator, View } from 'react-native';
import { ListItem } from 'react-native-elements'
import firebase from '../database/firebase';

export default class TherapyQuestionScreen extends Component {

  constructor() {
    super();
    this.firestoreRef = firebase.firestore().collection('questions').orderBy('block', 'asc').orderBy('categoryDropped', 'asc').orderBy('question', 'asc');
    this.state = {
      isLoading: true,
      questionArr: []
    };
  }

  componentDidMount() {
    this.unsubscribe = this.firestoreRef.onSnapshot(this.getCollection);
  }

  componentWillUnmount() {
    this.unsubscribe();
  }

  getCollection = (querySnapshot) => {
    const questionArr = [];
    querySnapshot.forEach((res) => {
      const { answer1,
        answer2,
        block,
        categoryDropped,
        question,
        question1,
        question2,
        word } = res.data();
      questionArr.push({
        key: res.id,
        res,
        answer1,
        answer2,
        block,
        categoryDropped,
        question,
        question1,
        question2,
        word,
      });
    });
    this.setState({
      questionArr,
      isLoading: false,
    });
  }

  render() {
    if (this.state.isLoading) {
      return (
        <View style={styles.preloader}>
          <ActivityIndicator size="large" color="#9E9E9E" />
        </View>
      )
    }
    return (
      <View style={styles.container}>
        <ScrollView style={styles.container}>
          {
            this.state.questionArr.map((item, i) => {
              return (
                <ListItem
                  key={i}
                  chevron
                  bottomDivider
                  onPress={() => {
                    this.props.navigation.navigate('TherapyQuestionDetailScreen', {
                      questionkey: item.key
                    });
                  }}>
                  <ListItem.Content>
                    <ListItem.Title>{item.categoryDropped} {item.block}-{item.question}</ListItem.Title>
                  </ListItem.Content>
                </ListItem>
              );
            })
          }
        </ScrollView>
      </View>

    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    paddingBottom: 22,
  },
  preloader: {
    left: 0,
    right: 0,
    top: 0,
    bottom: 0,
    position: 'absolute',
    alignItems: 'center',
    justifyContent: 'center'
  }
})

<View style={{ marginTop: 60 }}>
        <Text style={{ marginVertical: 20, marginLeft: 30 }}>Category</Text>
        <RNPickerSelect
          onValueChange={(value) => console.log(value)}
          items={[
            { label: 'Java', value: 'java' },
            { label: 'JavaScript', value: 'js' }
          ]}
          style={pickerSelectStyles}
          placeholder={{ label: 'Choose', value: '' }}
        />
      </View>

const pickerSelectStyles = StyleSheet.create({
  inputIOS: {
    fontSize: 16,
    paddingVertical: 12,
    paddingHorizontal: 10,
    borderWidth: 1,
    borderColor: '#789',
    borderRadius: 4,
    color: '#789',
    paddingRight: 30, // to ensure the text is never behind the icon
    width: 300,
    marginLeft: 30
  },
  inputAndroid: {
    fontSize: 16,
    paddingHorizontal: 10,
    paddingVertical: 8,
    borderWidth: 0.5,
    borderColor: '#789',
    borderRadius: 8,
    color: 'black',
    paddingRight: 30, // to ensure the text is never behind the icon
    width: 280,
    marginLeft: 30,
    backgroundColor:'#eee'
  },
});

<NavigationContainer>
      <Stack.Navigator
      screenOptions={{
          headerStyle: {
            backgroundColor: '#621FF7',
          },
          headerTintColor: '#fff',
          headerTitleStyle: {
            fontWeight: 'bold',
          },
        }}
      >
      <Stack.Screen 
        name="TherapyQuestionScreen" 
        component={TherapyQuestionScreen} 
        options={{ title: 'TherapyQuestions List' }}
      />
      <Stack.Screen 
       name="TherapyQuestionDetailScreen" 
       component={TherapyQuestionDetailScreen} 
       options={{ title: 'TherapyQuestion Detail' }}
      />
    </Stack.Navigator>
    </NavigationContainer>